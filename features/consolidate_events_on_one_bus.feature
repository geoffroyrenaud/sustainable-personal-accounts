Feature: consolidation of events across accounts into a single event bus

As a system administrator,
I flow all events related to managed accounts to a single event bus
so as to build an event-driven architecture for the personal accounts that I manage

Scenario: where a new account is detected
Given the default event bus of AWS account 'Automation' in an AWS Organisation
When an AWS account is created into this AWS Organisation
Then the native event generated by 'aws:organizations' is pushed to the event bus
# implementation: event is detected at root level, and injected into the event bus of account 'Automation'

Scenario: where the move of an account is detected
Given the default event bus of AWS account 'Automation' in an AWS Organisation
When an AWS account is moved from one OU to another OU into this AWS Organisation
Then the native event generated by 'aws:organizations' is pushed to the event bus
# implementation: event is detected at root level, and injected into the event bus of account 'Automation'

Scenario: where the tagging of an account is detected
Given the default event bus of AWS account 'Automation' in an AWS Organisation
When an AWS account is tagged with key 'account:state' and value 'assigned'
Then the native event generated by 'aws:organizations' is pushed to the event bus
# implementation: event is detected at root level, and injected into the event bus of account 'Automation'

Scenario: where the execution of CodeBuild project is reported
Given the default event bus of AWS account 'Automation' in an AWS Organisation
When codebuild project is executed within assigned account
Then the native event generated by 'aws:codebuild' is pushed to the event bus
# implementation: codebuild project is ran within target account, and 
# an events rule in target account forwards events to the event bus of account 'Automation'
# note: default event bus of account 'Automation' should accept events from entire AWS Organisation

Scenario: where vanilla account is reported
Given the default event bus of AWS account 'Automation' in an AWS Organisation
When lambda function 'OnVanillaAccount' is executed
Then lambda function emits an event 'VanillaAccount' on event bus
# implementation: lambda function is ran within account 'Automation', and emits event there

Scenario: where assigned account is reported
Given the default event bus of AWS account 'Automation' in an AWS Organisation
When lambda function 'OnAssignedAccount' is executed
Then lambda function emits event 'AssignedAccount' on event bus
# implementation: lambda function is ran within account 'Automation', and emits event there

Scenario: where prepared account is reported
Given the default event bus of AWS account 'Automation' in an AWS Organisation
When lambda function 'OnPreparedAccount' is executed
Then lambda function emits event 'PreparedAccount' on event bus
# implementation: codebuild project is ran within target account, and emits event across accounts
# note: default event bus of account 'Automation' should accept events from entire AWS Organisation

Scenario: where released account is reported
Given the default event bus of AWS account 'Automation' in an AWS Organisation
When lambda function 'OnReleasedAccount' is executed
Then lambda function emits an event 'ReleasedAccount' on event bus
# implementation: lambda function is ran within account 'Automation', and emits event there

Scenario: where expired account is reported
Given the default event bus of AWS account 'Automation' in an AWS Organisation
When lambda function 'OnExpiredAccount' is executed
Then lambda function emits an event 'ExpiredAccount' on event bus
# implementation: lambda function is ran within account 'Automation', and emits event there

Scenario: where purged account is reported
Given the default event bus of AWS account 'Automation' in an AWS Organisation
When lambda function 'OnPurgedAccount' is executed
Then lambda function emits an event 'PurgedAccount' on event bus
# implementation: lambda function is ran within account 'Automation', and emits event there
