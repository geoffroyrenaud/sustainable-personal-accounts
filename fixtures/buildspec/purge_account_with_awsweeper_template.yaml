# Copyright Reply.com or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

version: 0.2

env:
  variables:
    ENVIRONMENT_IDENTIFIER: None
    EVENT_BUS_ARN: None
    MAXIMUM_AGE: 6M
    PURGE_MESSAGE: SpaPurgeMessage
    PURGE_MODE: --dry-run
    TAG_KEY: purge
    TAG_VALUE: me

phases:
  install:
    commands:
    - ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
    - echo "ENVIRONMENT_IDENTIFIER=$ENVIRONMENT_IDENTIFIER"
    - echo "EVENT_BUS_ARN=$EVENT_BUS_ARN"
    - echo "MAXIMUM_AGE=$MAXIMUM_AGE"
    - echo "PURGE_EMAIL=$PURGE_EMAIL"
    - echo "PURGE_MESSAGE=$PURGE_MESSAGE"
    - echo "PURGE_MODE=$PURGE_MODE"
    - echo "PURGE TAG ${TAG_KEY}=${TAG_VALUE}"
    - curl -sSfL --retry 3 https://raw.githubusercontent.com/jckuester/awsweeper/master/install.sh | sh -s v0.12.0
  build:
    commands:
    - echo "Purge of account ${ACCOUNT} started on $(date)"
    - |
      cat <<EOF > regions.txt
      eu-west-1
      eu-west-3
      eu-central-1
      us-east-1
      EOF
    # full list of resource types at https://github.com/jckuester/awsweeper#supported-resources
    - echo "Wave 1 - Purge resources with tag '${TAG_KEY}'='${TAG_VALUE}'" | tee -a awsweeper.log
    - |
      cat <<EOF > filter.yaml
      aws_cloudformation_stack:
      - id: NOT((stack/StackSet-AWSControlTowerBP|CDKToolkit))
        tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_dynamodb_global_table:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_dynamodb_table:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_rds_cluster:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_rds_global_cluster:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_db_instance:  # rds
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_db_snapshot:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_ebs_snapshot:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_ebs_volume:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_ecs_cluster:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_efs_file_system:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_eip:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_eks_cluster:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_fsx_lustre_file_system:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_fsx_windows_file_system:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_instance:  # ec2
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_kinesis_stream:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_lambda_function:
      - id: NOT(aws-controltower)
        tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_msk_cluster:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_redshift_cluster:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_route53_zone:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_sfn_state_machine:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_sns_topic:
      - id: NOT(aws-controltower)
        tags:
          ${TAG_KEY}: ${TAG_VALUE}
      aws_sqs_queue:
      - tags:
          ${TAG_KEY}: ${TAG_VALUE}
      EOF
    - |
      while read REGION
      do
        echo "Looking for purgeable resources on account $ACCOUNT in region $REGION" >> awsweeper.log
        ./bin/awsweeper ${PURGE_MODE} --region ${REGION} filter.yaml | tee -a awsweeper.log
      done < regions.txt
    - echo "Wave 2 - Purge resources created more than ${MAXIMUM_AGE} ago" | tee -a awsweeper.log
    - |
      cat <<EOF > filter.yaml
      aws_cloudformation_stack:
      - id: NOT((stack/StackSet-AWSControlTowerBP|CDKToolkit))
        created:
          before: ${MAXIMUM_AGE}
      aws_ami:
      - created:
          before: ${MAXIMUM_AGE}
      aws_ebs_snapshot:
      - created:
          before: ${MAXIMUM_AGE}
      aws_ebs_volume:
      - created:
          before: ${MAXIMUM_AGE}
      aws_ec2_fleet:
      - created:
          before: ${MAXIMUM_AGE}
      aws_instance:
      - created:
          before: ${MAXIMUM_AGE}
      aws_efs_file_system:
      - created:
          before: ${MAXIMUM_AGE}
      aws_fsx_lustre_file_system:
      - created:
          before: ${MAXIMUM_AGE}
      aws_fsx_windows_file_system:
      - created:
          before: ${MAXIMUM_AGE}
      aws_db_instance:
      - created:
          before: ${MAXIMUM_AGE}
      aws_nat_gateway:
      - created:
          before: ${MAXIMUM_AGE}
      EOF
    - |
      while read REGION
      do
        echo "Looking for obsolete resources (${MAXIMUM_AGE}) on account $ACCOUNT in region $REGION" >> awsweeper.log
        ./bin/awsweeper ${PURGE_MODE} --region ${REGION} filter.yaml | tee -a awsweeper.log
      done < regions.txt
    - cat awsweeper.log | tail -c 4000 >purge-message.txt
    - aws ssm put-parameter --name "$PURGE_MESSAGE" --type String --value file://purge-message.txt --overwrite
    - LOG_MESSAGE=$(cat purge-message.txt)
    - DETAIL=$(jq -n --arg aa "$ACCOUNT" --arg ei "$ENVIRONMENT_IDENTIFIER" --arg lm "$LOG_MESSAGE" '{"Account":$aa,"Environment":$ei,"Message":$lm}')
    - |
      jq -n --arg ed "$DETAIL" --arg eb "$EVENT_BUS_ARN" \
        '{Entries: [{"Source":"SustainablePersonalAccounts","DetailType":"PurgeReport","Detail":$ed,"EventBusName":$eb}]}' >event-entries.json
    - aws events put-events --cli-input-json file://event-entries.json
    - echo "Account purge completed on $(date)"
