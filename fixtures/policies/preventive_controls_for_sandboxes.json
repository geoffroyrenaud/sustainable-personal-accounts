{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "SpaDenyEverythingFromRootUser",
      "Effect": "Deny",
      "Action": "*",
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "aws:PrincipalArn": [
            "arn:aws:iam::*:root"
          ]
        }
      }
    },
    {
      "Sid": "SpaDenyAllOutsideRequestedRegions",
      "Effect": "Deny",
      "NotAction": [
          "cloudfront:*",
          "iam:*",
          "route53:*",
          "support:*"
      ],
      "Resource": "*",
      "Condition": {
          "StringNotEquals": {
              "aws:RequestedRegion": [
                  "ap-east-1",
                  "eu-central-1",
                  "eu-west-1",
                  "eu-west-3",
                  "us-east-1",
                  "us-west-2"
              ]
          },
          "ArnNotLike": {
            "aws:PrincipalARN": "arn:aws:iam::*:role/AWSControlTowerExecution"
          }
      }
    },
    {
      "Sid": "SpaDenyCreationOfCostlyResources",
      "Effect": "Deny",
      "Action": [
        "acm-pca:CreateCertificateAuthority",
        "globalaccelerator:CreateAccelerator",
        "redshift:CreateCluster",
        "shield:CreateSubscription"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SpaDenyDurableCommitments",
      "Effect": "Deny",
      "Action": [
        "ec2:AcceptReservedInstancesExchangeQuote",
        "ec2:CreateCapacityReservation",
        "ec2:CreateReservedInstancesListing",
        "ec2:PurchaseHostReservation",
        "ec2:PurchaseReservedInstancesOffering",
        "ec2:PurchaseScheduledInstances",
        "rds:PurchaseReservedDBInstancesOffering",
        "redshift:PurchaseReservedNodeOffering",
        "route53domains:RegisterDomain",
        "route53domains:TransferDomain",
        "s3:PutBucketObjectLockConfiguration",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "savingsplans:*"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SpaDenyResourceShareOutsideOrganization",
      "Effect": "Deny",
      "Action": [
          "ram:CreateResourceShare",
          "ram:UpdateResourceShare"
      ],
      "Resource": "*",
      "Condition": {
          "Bool": {
              "ram:RequestedAllowsExternalPrincipals": "true"
          }
      }
    },
    {
      "Sid": "SpaDenyLeaveOrganization",
      "Effect": "Deny",
      "Action": [
        "organizations:LeaveOrganization"
      ],
      "Resource": "*"
    }
  ]
}